<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>
<html lang="en" xmlns="http://www.w3.org/1999/xhtml" xmlns:h="http://xmlns.jcp.org/jsf/html"
    xmlns:ui="http://xmlns.jcp.org/jsf/facelets" xmlns:p="http://primefaces.org/ui"
    xmlns:f="http://xmlns.jcp.org/jsf/core">

<h:head>
    <title>new</title>
    <h:outputStylesheet name="styles.css" />
</h:head>

<style type="text/css">
    body {
        font-family: "Calibri", sans-serif;
        font-size: large;
    }

    .container {
        display: flex;
        justify-content: space-between;
        background-color: #a0a8ae;
        box-sizing: border-box;
        border-radius: 6px;
    }

    .left {
        float: left;
        display: block;
        width: 300px;
        margin: 40px;
    }

    .right {
        float: right;
        display: block;
        width: 300px;
        margin: 40px;
    }

    .hidden {
        background: none;
        border: none;
        font-size: 0;
    }

    .table {
        border-collapse: collapse;
        border-spacing: 0;
        font: normal 13px Arial, sans-serif;
        border-radius: 6px;
    }

    .table thead th {
        border-radius: 6px;
        background-color: #2196F3;
        color: black;
        padding: 10px;
        text-align: left;
        color: white;
    }

    .table tbody td {
        color: #333;
        padding: 10px;
    }

    .output {
        text-align: center;
        border-radius: 6px;
        border: 2px solid #dee1e2;
        color: rgb(14, 14, 16);
        background: #dee1e2;
        margin: 10px;
        min-height: 36px;
        overflow: hidden;
    }

    .input_field {
        border-radius: 6px;
        border: none;
        color: rgb(14, 14, 16);
        background: #c3c7cd;
        height: 36px;
        margin-left: 10px;
        transition: all 100ms ease-out
    }

    .input_field:hover {
        background-color: #b0b8c0;
    }

    .submit {
        background-color: #2196F3;
        border: none;
        color: white;
        padding: 16px 32px;
        text-decoration: none;
        margin: 4px 2px;
        margin-left: 10px;
        cursor: pointer;
        border-radius: 6px;
        transition: all 100ms ease-out;
    }

    .submit:hover {
        background-color: #0D89EC;
    }

    .checkbox {
        appearance: none;
        background-color: #c3c7cd;
        border-radius: 72px;
        border-style: none;
        flex-shrink: 0;
        height: 20px;
        margin: 0;
        position: relative;
        width: 30px;
    }

    .checkbox::before {
        bottom: -6px;
        content: "";
        left: -6px;
        position: absolute;
        right: -6px;
        top: -6px;
    }

    .checkbox,
    .checkbox::after {
        transition: all 100ms ease-out;
    }

    .checkbox::after {
        background-color: #fff;
        border-radius: 50%;
        content: "";
        height: 14px;
        left: 3px;
        position: absolute;
        top: 3px;
        width: 14px;
    }

    .checkbox input[type=checkbox] {
        cursor: default;
    }

    .checkbox:hover {
        background-color: #b0b8c0;
        transition-duration: 0s;
    }

    .checkbox:checked {
        background-color: #2196F3;
    }

    .checkbox:checked::after {
        background-color: #fff;
        left: 13px;
    }

    .checkbox:focus:not(.focus-visible) {
        outline: 0;
    }

    .checkbox:checked:hover {
        background-color: #0D89EC;
    }

    #graphicDiv div {
        background: none;
        border: none;
    }

    #graphicDiv div div {
        background-color: none !important;
    }
</style>

<h:body>
    <div class="container">
        <h:form>
            <h:outputText value="#{controller.startScript()}" id="nothing" render="table" />

            <div>
                <div class="output left">
                    What about this number for X? 
                    <h:outputText value="#{controller.getRandomX()}" id="xRandomOutput" />
                    <h:selectBooleanCheckbox value="#{controller.xValueBool}" id="xValue" class="checkbox" />
                </div>
                <div class="output right">
                    <h:commandButton value="change number" class="input_field">
                        <f:ajax render="xRandomOutput" />
                    </h:commandButton>
                </div>

                <br />

                <div class="output left">Y</div>
                <div class="output right">
                    <h:inputText value="#{controller.yValue}" id="yValue"
                        onkeyup="$(this).val($(this).val().replace(/^(?![+]?[0123]\b).*/g, ''));" class="input_field">
                        <f:validateDoubleRange minimum="-3.00" maximum="3.00" />
                    </h:inputText>
                </div>

                <br />

                <div class="output left">R</div>
                <div class="output right">
                    <p:spinner min="0.1" max="3" stepFactor="0.1" value="#{controller.rValue}" id="rValue" size="15">
                        <f:ajax render="graphicPanel rOutput" />
                    </p:spinner>
                </div>

                <br />

                <h:commandButton value="Show resp" id="showResp" class="submit">
                    <f:ajax execute="xValue yValue rValue" render="xRandomOutput table graphicPanel rOutput"
                        listener="#{controller.getResponse()}" />
                </h:commandButton>
            </div>





            <div class="left" id="graphicDiv">
                <p:panel id="graphicPanel">
                    <svg id="graphic" height="300" width="300" xmlns="http://www.w3.org/2000/svg">
                        <polygon id="triangle" class="figure" fill="#2196F3" points="
                        150,#{(-controller.getrValue()*100/3+150)}
                        150,150 
                        #{(-controller.getrValue()*100/6+150)},150" />

                        <polygon id="square" class="figure" fill="#2196F3" points="
                        150,#{(controller.getrValue()*100/3+150)} 
                        150,150 
                        #{(controller.getrValue()*100/6+150)},150 
                        #{(controller.getrValue()*100/6+150)},#{(controller.getrValue()*100/3+150)}" />

                        <path id="round" class="figure" fill="#2196F3" d="
                        M #{(controller.getrValue()*100/6+150)} 150 
                        C #{(controller.getrValue()*100/6+150)} #{(-controller.getrValue()*100/6+150)}, 
                        150 #{(-controller.getrValue()*100/6+150)}, 150 #{(-controller.getrValue()*100/6+150)} 
                        L 150 150 Z" />

                        <circle cx="#{controller.xValue / controller.rValue * 100 + 150}"
                            cy="#{-(controller.yValue / controller.rValue) * 100 + 150}" r="2" fill="black"
                            id="point" />

                        <line stroke="#272829" x1="0" x2="300" y1="150" y2="150"></line>
                        <line stroke="#272829" x1="150" x2="150" y1="0" y2="300"></line>
                        <polygon fill="#272829" stroke="#272829" points="150,0 144,15 156,15"></polygon>
                        <polygon fill="#272829" stroke="#272829" points="300,150 285,156 285,144"></polygon>

                        <line stroke="#272829" x1="200" x2="200" y1="155" y2="145"></line>
                        <line stroke="#272829" x1="250" x2="250" y1="155" y2="145"></line>
                        <line stroke="#272829" x1="50" x2="50" y1="155" y2="145"></line>
                        <line stroke="#272829" x1="100" x2="100" y1="155" y2="145"></line>
                        <line stroke="#272829" x1="145" x2="155" y1="100" y2="100"></line>
                        <line stroke="#272829" x1="145" x2="155" y1="50" y2="50"></line>
                        <line stroke="#272829" x1="145" x2="155" y1="200" y2="200"></line>
                        <line stroke="#272829" x1="145" x2="155" y1="250" y2="250"></line>

                        <text class="fives" fill="#272829" x="250" y="170">3</text>
                        <text class="fives" fill="#272829" x="40" y="170">-3</text>
                        <text class="fives" fill="#272829" x="130" y="55">3</text>
                        <text class="fives" fill="#272829" x="130" y="255">-3</text>
                    </svg>
                </p:panel>
            </div>



            <br />
            <div class="right">
                <h:inputText id="graphicX" value="#{controller.xValue}" class="output" />
                <h:inputText id="graphicY" value="#{controller.yValue}" class="output" />
                <h:outputText id="rOutput" value="#{controller.rValue}" class="hidden"></h:outputText>
                <h:commandButton class="hidden" id="submitGraphic" value="Отправить">
                    <f:ajax execute="graphicX graphicY xValue rOutput" listener="#{controller.getResponse()}"
                        render="table graphicPanel" />
                </h:commandButton>

            </div>


            <div class="right">
                <h:dataTable value="#{controller.responseList}" var="item" id="table" class="table">
                    <h:column>
                        <f:facet name="header">x</f:facet>
                        #{item.x}
                    </h:column>
                    <h:column>
                        <f:facet name="header">y</f:facet>
                        #{item.y}
                    </h:column>
                    <h:column>
                        <f:facet name="header">r</f:facet>
                        #{item.r}
                    </h:column>
                    <h:column>
                        <f:facet name="header">response</f:facet>
                        #{item.value}
                    </h:column>
                </h:dataTable>
                <br />
            </div>
        </h:form>
        <h:outputScript library="js" name="script.js" />
    </div>
</h:body>

</html>